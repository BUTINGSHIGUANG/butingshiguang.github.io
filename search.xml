<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[说一下迁移系统到SSD后的双系统问题]]></title>
    <url>%2F2018%2F04%2F26%2F20180426%2F</url>
    <content type="text"><![CDATA[系统迁移与双系统起因 上周受不了电脑的慢，给电脑加装了一块240GB SSD，为了跑Java和安卓模拟器加了一根4G内存条 为了提高工作效率 系统迁移 因为系统装了很多编程软件和各种环境，重装太麻烦故选择迁移 工具是WePE里的傲梅分区助手，SSD分了两个区，完整迁移C盘至SSD，并且将D盘(我用做软件安装盘)里的ProgramFiles *拷贝到SSD第二个分区 修复引导从SSD进入系统后更改软件盘的盘符与之前对应即可 Ubuntu系统拯救 因为原来是机械硬盘上有双系统，而我合并了以前的系统盘和软件盘两个分区，导致硬盘分区编号变动致Ubuntu不能引导启动 我在Win10下使用Easy BCD免费软件添加了Grub2引导hd0(原机械)的Linux /boot分区，重启进入Grub命令行界面 使用ls命令查看硬盘分区状况,ls (hd0, msdos*)等查看分区类型，找到Ext2的两个分区，一个是boot分区，一个是/分区 使用set查看grub配置情况，查看prefix=xxx，root=xxx，发现不对 使用ls继续查看文件，区分/boot分区与/分区 找到boot分区后使用set prefix=hd0,msdos6/grub,set root=hd0,msdos6设置好grub配置 使用insmod normal,normal就可以启动Ubuntu了 进入系统后使用update-grub(需要root权限),系统便会自动更新引导相关配置 大功告成 总结 推荐一个小工具EasyBCD,我已经用了三四年了，双系统安装(Win为主，Linux为辅)很棒 没事多鼓捣，实践出真知]]></content>
      <categories>
        <category>技能</category>
      </categories>
      <tags>
        <tag>技能</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[不坚持是不会学到东西的]]></title>
    <url>%2F2018%2F01%2F08%2F20180108%2F</url>
    <content type="text"><![CDATA[不坚持是不会学到东西的，有的时候优秀的东西一定是在考验的环境里熬出来的 马云-演讲]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[豆瓣爬虫1]]></title>
    <url>%2F2017%2F12%2F29%2F20171229%2F</url>
    <content type="text"><![CDATA[豆瓣热门电影评论爬虫环境 Python36 Chrome 分词库:jieba 词云:wordcloud 解析DOM:beautifulsoup4 绘图:matplotlib 数据处理:pandas, numpy 以上模块均可通过 pip install ** 安装 学会Google, Baidu, 看博客 开始吧^_^网页分析 直接上代码，注释很详细123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899# coding:utf-8__author__ = 'buting'from urllib import requestfrom http import cookiejarfrom urllib import parseimport requestsfrom bs4 import BeautifulSoup as bsimport reimport jiebaimport pandas as pdimport numpyfrom wordcloud import WordCloudimport matplotlib.pyplot as pltimport matplotlibimport timedef getMovieIdList(): head = &#123;&#125; head['User-Agent'] = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.75 Safari/537.36' head['Connection'] = 'keep-alive' head['Host'] = 'movie.douban.com' reqs = request.urlopen(request.Request('https://movie.douban.com/nowplaying/wuhan/', headers = head)) html_data = reqs.read().decode('utf-8') soup = bs(html_data, 'html.parser') # 使用beautifulsoup解析html nowplaying = soup.find_all('div', id = 'nowplaying') # 找到容纳影片的div nowplaying = nowplaying[0].find_all('li', class_ = 'list-item') # 找到各个影片li nowplaying_movie_id_name = [] for movie in nowplaying: movie_id_name = &#123;&#125; movie_id_name = dict(zip( ('id', 'score', 'director', 'actors', 'duration'), (movie['data-subject'], movie['data-score'], movie['data-director'], movie['data-actors'], movie['data-duration']) )) # movie_id_name['id'] = movie['data-subject'] movie_id_name['name'] = movie.find('img')['alt'] nowplaying_movie_id_name.append(movie_id_name) return nowplaying_movie_id_namedef getComments(id, pageNum): start = 0 if type(pageNum) == type(7) and pageNum &gt; 0: start = (pageNum - 1) * 20 url = 'https://movie.douban.com/subject/' + id + '/comments' + '?start=' + str(start) + '&amp;limit=20' head = &#123;&#125; head['User-Agent'] = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.75 Safari/537.36' reqs = request.urlopen(request.Request(url, headers = head)) html_data = reqs.read().decode('utf-8') soup = bs(html_data, 'html.parser') comment = soup.find_all('div', class_ = 'comment') comments = '' for div in comment: if div.find('p').string is not None: comments += div.find('p').string.strip() return commentsdef spider(): # 获取评论 movie_info_dict_list = getMovieIdList() comments = '' for i in range(10): if i % 8 == 0: time.sleep(0.2) comments += getComments(movie_info_dict_list[0]['id'], i + 1) # 提取汉字, 汉字unicode编码开头至结尾 pattern = re.compile(r'[\u4e00-\u9fa5]+') characters_list = re.findall(pattern, comments) ch_comments = ''.join(characters_list) # 使用结巴分词进行中文分词 ch_comments_list = jieba.lcut(ch_comments) # 通过pandas将词汇列表生成一张数据表格 ch_df = pd.DataFrame(&#123;'segment':ch_comments_list&#125;) # 获取停用词数据表 stop_ch = pd.read_csv("stopwords.txt", index_col=False, quoting=3, sep="\t", names=['stopch'], encoding='utf-8') # 使用pandas去掉停用词 ch_df = ch_df[~ch_df.segment.isin(stop_ch.stopch)] # 词频统计,生成一张词语与词频数的数据表 ch_fre_df = ch_df.groupby(by=['segment'])['segment'].agg(&#123;"计数":numpy.size&#125;) ch_fre_df = ch_fre_df.reset_index().sort_values(by=["计数"],ascending=False) # 词云显示 wordcloud = WordCloud(font_path="simhei.ttf",background_color="#ffffff", width=1200, height=800, min_font_size=20, max_words=2000, max_font_size=100) ch_frequence = &#123;x[0]:x[1] for x in ch_fre_df.head(1000).values&#125; wordcloud = wordcloud.fit_words(ch_frequence) # 绘图显示保存 plt.imshow(wordcloud) plt.savefig('./' + movie_info_dict_list[0]['name'] + '_douban_wordcloud.png', dpi=800) plt.show()if __name__ == '__main__': print('https://butingshiguang.github.io/') spider() 结果展示]]></content>
      <categories>
        <category>编程</category>
        <category>爬虫</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记金蝶(Kingdee)软件面试 2017-11-21]]></title>
    <url>%2F2017%2F11%2F21%2F20171121%2F</url>
    <content type="text"><![CDATA[面试问题 HR 2分钟自我介绍 售前与开发的关系(他说他们公司的开发经理也是售前经理) 来金蝶面试之前做了多少准备 什么是sword(音译)分析方法 什么是??分析方法 一个项目的完整过程(可行性分析，需求分析，市场分析，风险分析 etc.) 这是你的第几次面试 有女朋友吗 你觉得自己适合干程序员吗 技术经理 说说你对java的理解 说说你对OO(面向对象)的理解 做过什么项目吗 数据库中存储过程 与 函数 的区别 向面试官提问 什么时候出面试结果(一周内) 你们实习期多长(毕业前都是实习期) 实习期工资(没有，只有1k左右的补贴) 过了面试什么时候可以过去实习(没课以后，随时可以来实习) 你们实习期淘汰的人是自己走的还是公司直接解雇的(都有，很多不能坚持下来，实习是以学习为主，需要对IT行业热爱，能坚持) 总结 这家公司需要对这行热爱的人，能坚持，实习期是以学习为主要目的 公司实习淘汰率较高 主要搞后端开发 人资需要对自己有信心能够挖掘客户价值，说服客户的人；技术部门需要热爱技术，能坚持到最后的人 针对不同的公司，需求不一样，有的公司只要那种能够立刻上手的人(小公司)，有的需要能够坚持学习下来的人，沟通能力强的人(中大型公司)，这家属于后者，工资比较低(云南IT十分落后，工资很低) 自学与工作中学习:工作中学到的更牢靠更实用，能够体会软件项目开发的完整过程]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[20171101面试记录(Oracle China)]]></title>
    <url>%2F2017%2F11%2F02%2F20171102%2F</url>
    <content type="text"><![CDATA[面试问题 什么是面向对象？(OOP) C语言创建线程？(Linux fork()进程) C语言垃圾回收机制？（手动释放free()） 对Oracle了解吗？(北京、深圳、苏州三个研发中心，昆明是培训机构) Java三大框架SSH玩的溜吗？ 用过哪些数据库？(MySQL,SQLite3) 用过Nginx做过负载均衡吗？ 何为分布式和集群？(面试官说:分布式是做一件事情的各个小部分(不同的事情),集群是做同一件事情) 面试官说C和java是很像的，我当时就像给他一巴掌，他只懂Java 你为什么想搞IT？(没有为什么) 你做过什么项目吗？(Qt Music Player, 滚-垃圾) 总结 面试官只懂java，他们公司想招JavaEE程序员，然而我是主攻CPlusPlus，故。。。 最后推荐我去他们的管培生项目(JavaEE)，学费16k，工作后慢慢还——-滚，还不如自己学! 我怀疑这就是个阴谋，他们把我骗过去面试就是为了培训班招人。。。(吐血，套路深…) 吐槽 技术才是最重要的，对一个程序员来说，所以我得回去练技术了。。。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[20171026面试小结]]></title>
    <url>%2F2017%2F10%2F27%2F20171026%2F</url>
    <content type="text"><![CDATA[面试问题 java sleep()为什么要捕获异常 Java位图 JavaEE中会用到的设计模式 Java读取一个mp3文件时可以采用哪种流？字符流，字节流，数据流 Java虚拟机如何加载一个Java类 总结 认准一个方向 把该方向的主流技术栈学会，会用但不求十分精深 Spring+Strus+Hibernate 做JavaEE​要会前端CSS-HTML-JAVASCRIPT 在必要时候能够顶替前端人员进行开发 熟练应用设计模式 多刷题，应对技术面试～ 前景了解 Android Application方向趋于饱和，找工作不易 嵌入式方向，c++,c,vb,Qt,树莓派，Arduino C++找人少，C++对程序员要求高，难度大易出bug Java 解决方案 由 Thread 提供并受 Thread.sleep() 和 Object.wait() 支持的中断机制就是一种取消机制；它允许一个线程请求另一个线程停止它正在做的事情。当一个方法抛出 InterruptedException 时，它是在告诉您，如果执行该方法的线程被中断，它将尝试停止它正在做的事情而提前返回，并通过抛出 InterruptedException 表明它提前返回。 行为良好的阻塞库方法应该能对中断作出响应并抛出 InterruptedException，以便能够用于可取消活动中，而不至于影响响应。 最后 只有不断加强自己某一方面的技术才能得到用人单位的认可]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[1024程序员节快乐!!!]]></title>
    <url>%2F2017%2F10%2F24%2F20171024%2F</url>
    <content type="text"><![CDATA[祝地球上的程序员们节日愉快，代码无bug！ 有人问一个程序员借1000块钱，程序员说借你1024块凑个整吧~那人一脸懵逼]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[java8学习笔记]]></title>
    <url>%2F2017%2F10%2F19%2F20171019%2F</url>
    <content type="text"><![CDATA[java8java annotation (注解) @Override 覆写 @Deprecated 过期 @SuppressWarnings({ “rawtypes”, “unchecked” }) 压制警告 Java 泛型通配符 Message&lt;?&gt;: 泛型类型通配 Message&lt;? extends 类&gt;: 设置泛型上限，子类 Message&lt;? super 类&gt;: 设置泛型下限，父类 泛型接口1234567891011121314interface IMessage&lt;T&gt; &#123; //设置泛型接口 public void print(T t);&#125;class MessageImpl&lt;T&gt; implements IMessage&lt;T&gt; &#123; public void print(T t) &#123; System.out.println(t); &#125;&#125;public class TestDemo &#123; public static void main(String[] args)&#123; IMessage&lt;String&gt; msg = new MessageImpl&lt;String&gt;(); msg.print("Hello World!"); &#125;&#125; 泛型方法123public static &lt;T&gt; T fun(T t) &#123; //T的类型由传入类型决定 return t;&#125; 枚举12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364enum Color &#123; //相当于一个类继承了Enum类(抽象类)而已 RED,GREEN,BLUE;&#125;public class TestDemo &#123; public static void main(String[] args)&#123; Color red = Color.RED; System.out.println(red); for (Color c : Color.values()) &#123; //values() System.out.println(c.ordinal() + " - "); &#125; &#125;&#125;//扩充枚举功能enum Color &#123; //相当于一个类继承了Enum类(抽象类)而已 RED("红色"),GREEN("绿色"),BLUE("蓝色"); private String title; private Color(String title) &#123; this.title = title; &#125;&#125;public class TestDemo &#123; public static void main(String[] args)&#123; Color red = Color.RED; System.out.println(red); for (Color c : Color.values()) &#123; //values() System.out.println(c); //调用toString() &#125; &#125;&#125;//枚举实现接口enum Color implements Message &#123; RED("红色"),GREEN("绿色"),BLUE("蓝色"); private String title; private Color(String title) &#123; this.title = title; &#125; public String getTitle() &#123; return title; &#125;&#125;public class TestDemo &#123; public static void main(String[] args)&#123; Message msg = Color.RED; System.out.println(msg.getTitle()); &#125;&#125;//枚举最变态的做法enum Color implements Message &#123; RED("红色")&#123; public String getTitle() &#123; return "自己的" + this.title; &#125; &#125;,GREEN("绿色"),BLUE("蓝色"); private String title; private Color(String title) &#123; this.title = title; &#125; public String getTitle() &#123; return title; &#125;&#125; 泛型中定义普通方法使用default在接口中定义普通方法 使用static在接口中定义普通方法12345678910111213141516171819202122interface IMessage &#123; public void print(); default void fun() &#123; //此处定义了一个普通方法 System.out.println("毁三观的方法"); &#125; static void get() &#123; System.out.println("直接由接口调用!"); &#125;&#125;class MessageImpl implements IMessage &#123; @Override public void print() &#123; System.out.println("Hello World!"); &#125;&#125;public class TestDemo &#123; public static void main(String[] args)&#123; IMessage msg = new MessageImpl(); msg.fun(); //接口中直接定义的 &#125; IMessage.get();&#125; lambda表达式匿名内部类123456789101112public class TestDemo &#123; public static void main(String[] args)&#123; fun(new IMessage() &#123; public void print() &#123; System.out.println("Hello World!!!"); &#125; &#125;); &#125;&#125;// lambdafun( () -&gt; System.out.println("Hello World!!!") ); lambda (参数表)-&gt; 单行语句; (参数表)-&gt; {单行语句}; (参数表)-&gt; 表达式; 123456789101112interface IMessage &#123; public void print(String str);&#125;public class TestDemo &#123; public static void main(String[] args)&#123; fun((s) -&gt; System.out.println(s)); &#125; public static void fun(IMessage msg) &#123; msg.print("Hello World!"); &#125;&#125; 4种方法引用 引用静态方法: 类名称::static 方法名称; 引用某个对象的方法: 实例化对象::普通方法; 引用特定类型的方法: 特定类::普通方法; 引用构造方法: 类名称::new; 123456789101112@FunctionalInterface //此注解指定该接口内部只存在一个方法,即函数式接口(可以引用函数)interface IMessage&lt;P,R&gt; &#123; public R zhuanhuan(P p);&#125;public class TestDemo &#123; public static void main(String[] args)&#123; //引用类的普通方法 IMessage&lt;Integer,String&gt; msg = String::valueOf; String str = msg.zhuanhuan(1000); System.out.println(str.replaceAll("0", "9")); &#125;&#125;]]></content>
      <categories>
        <category>编程</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>编程</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[谈谈我对“墙”的看法]]></title>
    <url>%2F2017%2F10%2F13%2F20171013%2F</url>
    <content type="text"><![CDATA[首先，这里的墙指的是中国的防火长城GFW，有很多被屏蔽的国外网站如Google,Youtube,etc.很多人对墙的看法不一，大多数都持有批评的态度。 对于普通用户来说：我认为墙的存在是有好处的，这个社会有太多对中国(包括政府)的批评和抹黑，特别是在国外，Youtube上面骂中国的一大堆。如果完全开发对国外网站的访问，势必存在一些没有自己独立思考的人会跟风起哄，而且国外对中国公民散布谣言，乱我军心也是必然存在的。 对于IT/计算机等从业者或某些爱好者来说，访问Google等网站是必须的，所以有时候难免会翻墙，GFW造成了很大的不便。 总的说来，GFW的存在有着一定的必要性，利大于弊。]]></content>
      <categories>
        <category>科技</category>
      </categories>
      <tags>
        <tag>科技</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[今天星期四，稍微弄了一下]]></title>
    <url>%2F2017%2F10%2F12%2F20171012%2F</url>
    <content type="text"><![CDATA[测试测试时光不停时光不停 不停 新浪微博]]></content>
      <categories>
        <category>测试</category>
      </categories>
      <tags>
        <tag>测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[欢迎来到不停的博客，我还有一个名字叫Tesla Chan]]></title>
    <url>%2F2017%2F10%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to KM!这是我的第二个博客，使用GithubPages搭建，我是 TeslaChan @buting，一个热爱技术，爱好科学的骚年~~~ 以下都是扯淡！！！博客先搭起来再说，以后再慢慢美化整理，乱七八糟的东西请无视&gt;_&lt;我的新浪微博 @曦未晞 ，欢迎关注~，这才是重点 Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>欢迎</category>
      </categories>
      <tags>
        <tag>欢迎</tag>
      </tags>
  </entry>
</search>
